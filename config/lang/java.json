{
    "extensions": [".java"],
	"grammarConfig": {
		"grammarFiles": [
			"../grammars/java/java8/Java8Lexer.g4",
			"../grammars/java/java8/Java8Parser.g4"
		],
		"utilJavaFiles": [],
		"startRule": "compilationUnit"
	},
	"processConfig": {
		"splitConfig": {
			"splitRules": [
				"statement",
				"ELSE",
				"catchClause",
				"typeDeclaration",
				"methodDeclaration"
			]
		},
		"normalizeConfig": {
			"mapping": {
				"StringLiteral": "\"S\"",
				"CharacterLiteral": "'C'",
				"IntegerLiteral": "N",
				"FloatingPointLiteral": "N",
				"BooleanLiteral": "$L"
			},
			"indexedMapping": {
				"expressionName": "$V",
				"variableDeclaratorId": "$V",
				"typeName": "$V"
			},
			"nonNumberedRuleMap": [
				{
					"fromRules": [
						"StringLiteral"
					],
					"toSymbol": "\"S\""
				},
				{
					"fromRules": [
						"CharacterLiteral"
					],
					"toSymbol": "'C'"
				},
				{
					"fromRules": ["IntegerLiteral"],
					"toSymbol": "N"
				},
				{
					"fromRules": ["FloatingPointLiteral"],
					"toSymbol": "N"
				},
				{
					"fromRules": ["BooleanLiteral"],
					"toSymbol": "$L"
				}
			],
			"numberedRuleMap": [
				{
					"fromRules": ["expressionName"],
					"toSymbol": "$V"
				},
				{
					"fromRules": ["variableDeclaratorId"],
					"toSymbol": "$V"
				},
				{
					"fromRules": ["typeName"],
					"toSymbol": "$V"
				}
			],
			"ignoreRules": [
				"annotation",
				"packageDeclaration",
				"importDeclaration",
				"variableModifier",
				"classModifier",
				"fieldModifier",
				"methodModifier",
				"constructorModifier",
				"interfaceModifier",
				"constantModifier",
				"interfaceMethodModifier",
				"annotationTypeElementModifier",
				"EOF",
				"RBRACE"
			]
		}
	}
}
